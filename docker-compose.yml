
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-labl_iq_db}
      POSTGRES_USER: ${POSTGRES_USER:-labl_iq_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-labl_iq_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-labl_iq_user} -d ${POSTGRES_DB:-labl_iq_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: .
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-labl_iq_user}:${POSTGRES_PASSWORD:-labl_iq_password}@postgres:5432/${POSTGRES_DB:-labl_iq_db}
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-in-production}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY:-your-refresh-secret-key-change-in-production}
      - ENVIRONMENT=production
      - DEBUG=false
      - CORS_ORIGINS=${CORS_ORIGINS:-https://your-frontend-domain.vercel.app}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

volumes:
  postgres_data:
